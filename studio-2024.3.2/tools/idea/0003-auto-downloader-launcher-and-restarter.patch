From 53c0cc5fe0f108b5a17f6238418f6e596a96b4dd Mon Sep 17 00:00:00 2001
From: pengcui <pngcui1224@163.com>
Date: Tue, 9 Sep 2025 14:08:34 +0800
Subject: [PATCH 3/3] auto downloader launcher and restarter

Change-Id: Ie87a216d1e2cf9b34b26205678af3be1890555cf
---
 .../intellij/build/NativeBinaryDownloader.kt       | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/platform/build-scripts/src/org/jetbrains/intellij/build/NativeBinaryDownloader.kt b/platform/build-scripts/src/org/jetbrains/intellij/build/NativeBinaryDownloader.kt
index 64fa50ea8dae..26aa5746fbdb 100644
--- a/platform/build-scripts/src/org/jetbrains/intellij/build/NativeBinaryDownloader.kt
+++ b/platform/build-scripts/src/org/jetbrains/intellij/build/NativeBinaryDownloader.kt
@@ -41,11 +41,12 @@ object NativeBinaryDownloader {
    * Returns a pair of paths `(executable, license)` for the given platform.
    */
   suspend fun getLauncher(context: BuildContext, os: OsFamily, arch: JvmArchitecture): Pair<Path, Path> {
-    return Pair(
+    /*return Pair(
       findFileForAndroidStudio("launcher", context, os, arch),
       findFileForAndroidStudio("launcher_licenses.html", context, os, arch),
-    )
+    )*/
     /* Android Studio (b/342419219): we build platform binaries from source instead of downloading them from JetBrains.
+    */
     if (context.options.isInDevelopmentMode && context.options.useLocalLauncher) {
       val localLauncher = findLocalLauncher(context, os)
       if (localLauncher != null) return localLauncher
@@ -55,7 +56,7 @@ object NativeBinaryDownloader {
     val executableFile = findExecutable(archiveFile, unpackedDir, os, arch, "xplat-launcher")
     val licenseFile = findFile(archiveFile, unpackedDir, "license/${LICENSE_FILE_NAME}")
     return executableFile to licenseFile
-    */
+
   }
 
   private fun findLocalLauncher(context: BuildContext, os: OsFamily): Pair<Path, Path>? {
@@ -79,15 +80,16 @@ object NativeBinaryDownloader {
    * Downloads and unpacks the restarter tarball and returns a path to an executable for the given platform.
    */
   suspend fun getRestarter(context: BuildContext, os: OsFamily, arch: JvmArchitecture): Path {
-    return findFileForAndroidStudio("restarter", context, os, arch)
+    // return findFileForAndroidStudio("restarter", context, os, arch)
     /* Android Studio (b/342419219): we build platform binaries from source instead of downloading them from JetBrains.
+    */
     val (archiveFile, unpackedDir) = downloadAndUnpack(context, "restarterBuild", RESTARTER_ID)
     return findExecutable(archiveFile, unpackedDir, os, arch, "restarter")
-    */
+
   }
 
   private suspend fun downloadAndUnpack(context: BuildContext, propertyName: String, artifactId: String): Pair<Path, Path> {
-    error("Android Studio (b/342419219): platform binaries should be built from source instead of downloaded from JetBrains")
+    // error("Android Studio (b/342419219): platform binaries should be built from source instead of downloaded from JetBrains")
     val communityRoot = context.paths.communityHomeDirRoot
     val version = context.dependenciesProperties.property(propertyName)
     val uri = BuildDependenciesDownloader.getUriForMavenArtifact(INTELLIJ_DEPENDENCIES_URL, GROUP_ID, artifactId, version, PACKAGING)
-- 
2.25.1

